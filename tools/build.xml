
<project name="velocity-tools-library" default="all" basedir=".">

<!-- ========== Initialize Properties ===================================== -->

  <property file="${basedir}/build/build.properties"/> <!-- Component local -->
  <property file="${basedir}/../build.properties"/>    <!-- Commons local   -->
  <property file="${user.home}/.build.properties"/>    <!-- User local      -->

<!-- ========== External Dependencies ===================================== -->

 <!-- the local repository -->
 <property name="local.repository"            value="${basedir}/lib" />
 <property name="project.repository"          value="${basedir}/../lib" />

<!-- ========== Component Declarations ==================================== -->


  <!-- The name of this component -->
  <property name="project.name"          value="velocity-tools-library" />

  <!-- The title of this component -->
  <property name="project.title"         value=""/>

  <!-- The current version number of this component -->
  <property name="project.version"       value="0.1"/>

  <!-- The current version number of this component -->
  <property name="project.date"          value="24-Mar-2002"/>

  <!-- The base directory for compilation targets -->
  <property name="build.home"            value="${basedir}/target"/>

  <!-- The base directory for distribution targets -->
  <property name="dist.home"             value="${basedir}/dist"/>

  <!-- The base directory for component sources -->
  <property name="source.home"           value="${basedir}/src"/>

  <!-- The base directory for component sources -->
  <property name="conf.home"             value="${basedir}/src/conf"/>

  <!-- The docs source directory -->
  <property name="docs.src"              value="${basedir}/xdocs"/>

  <!-- The docs destination directory  -->
  <property name="docs.dest"             value="${basedir}/docs"/>

  <!-- The docs destination directory  -->
  <property name="examples.home"         value="${basedir}/examples"/>

<!-- ========== Compiler Defaults ========================================= -->


  <!-- Should Java compilations set the 'debug' compiler option? -->
  <property name="compile.debug"           value="true"/>

  <!-- Should Java compilations set the 'deprecation' compiler option? -->
  <property name="compile.deprecation"     value="true"/>

  <!-- Should Java compilations set the 'optimize' compiler option? -->
  <property name="compile.optimize"        value="true"/>

  <!-- Construct compile classpath -->
  <path id="classpath">
    <fileset dir="${local.repository}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${project.repository}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

<!-- ========== Executable Targets ======================================== -->


  <!-- ================================================================== -->
  <!-- I N I T                                                            -->
  <!-- ================================================================== -->
  <target name="init"
   description="Initialize and evaluate conditionals">
    <echo message="-------- ${project.name} ${project.version} --------"/>
    <filter  token="name"                  value="${project.name}"/>
    <filter  token="version"               value="${project.version}"/>
  </target>

  <!-- ================================================================== -->
  <!-- P R E P A R E                                                      -->
  <!-- ================================================================== -->
  <target name="prepare" depends="init"
   description="Prepare build directory">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/classes"/>
    <mkdir dir="${build.home}/conf"/>
    <mkdir dir="${build.home}/javadoc"/>
  </target>

  <!-- ================================================================== -->
  <!-- S T A T I C                                                        -->
  <!-- ================================================================== -->
  <target name="static" depends="prepare"
   description="Copy static files to build directory">
    <tstamp/>
    <copy  todir="${build.home}/conf" filtering="on">
      <fileset dir="${conf.home}" includes="*.MF"/>
    </copy>
  </target>


  <!-- ================================================================== -->
  <!-- A L L                                                              -->
  <!-- ================================================================== -->
  <target name="all" depends="clean,jar,install-jar,docs,javadocs"
   description="Build entire project"/>


  <!-- ================================================================== -->
  <!-- C L E A N                                                          -->
  <!-- ================================================================== -->
  <target name="clean"
    description="Clean build and distribution directories">

    <delete    dir="${build.home}"/>

    <delete    dir="${dist.home}"/>

    <delete>
      <fileset dir="${basedir}" includes="*.jar"/>
    </delete>

    <delete>
        <fileset dir="${project.repository}" includes="${project.name}-*.jar"/>
    </delete>

    <delete>
      <fileset dir="${docs.dest}" includes="**/*.html"/>
    </delete>

    <delete>
      <fileset dir="${basedir}" includes="**/*.bak"/>
    </delete>

  </target>


  <!-- ================================================================== -->
  <!-- C O M P I L E                                                      -->
  <!-- ================================================================== -->
  <target name="compile" depends="static" description="Compile">

    <javac  srcdir="${source.home}/java"
            destdir="${build.home}/classes"
            debug="${compile.debug}"
            deprecation="${compile.deprecation}"
            optimize="${compile.optimize}">
        <classpath refid="classpath"/>
    </javac>

    <copy    todir="${build.home}/classes" filtering="on">
      <fileset dir="${source.home}/java" excludes="**/*.java"/>
    </copy>

  </target>


  <!-- ================================================================== -->
  <!-- J A V A D O C S                                                    -->
  <!-- ================================================================== -->
  <target name="javadocs" depends="static"
   description="Create Javadoc documentation, public members only">

    <!-- Construct compile classpath -->
    <path id="sourcepath">
      <pathelement path="${basedir}/../view/src/java/"/>
      <pathelement path="${basedir}/src/java/"/>
    </path>

    <javadoc sourcepathref="sourcepath"
                   destdir="${docs.dest}/javadoc"
                    author="true"
                    public="true"
                   version="true"
                  doctitle="&lt;h1&gt;${project.title}&lt;/h1&gt;"
               windowtitle="${project.title} (Version ${project.version})"
                    bottom="Copyright (c) 2002 Apache Software Foundation" >

      <package name="org.apache.velocity.tools.tools"/>
      <package name="org.apache.velocity.tools.view.tools"/>
      <package name="org.apache.velocity.tools.view.context"/>

      <group title="View Tools" packages="org.apache.velocity.tools.tools"/>
      <group title="View Tools Infrastructure" packages="org.apache.velocity.tools.view.tools:org.apache.velocity.tools.view.context"/>

      <classpath refid="classpath"/>

     </javadoc>
  </target>


  <!-- ================================================================== -->
  <!-- J A R                                                              -->
  <!-- ================================================================== -->
  <target name="jar" depends="compile">
    <jar    jarfile="${project.name}-${project.version}.jar"
            basedir="${build.home}/classes"
            manifest="${conf.home}/MANIFEST.MF"/>
  </target>


  <!-- ================================================================== -->
  <!-- I N S T A L L  J A R                                               -->
  <!-- ================================================================== -->
  <target name="install-jar" depends="jar"
          description="--> Installs .jar file in ${project.repository}">

    <copy todir="${project.repository}" filtering="no">
      <fileset dir="${basedir}">
        <include name="${project.name}-${project.version}.jar"/>
      </fileset>
    </copy>

  </target>


  <!-- ================================================================== -->
  <!-- D O C S                                                            -->
  <!-- ================================================================== -->
  <target name="docs">

      <taskdef name="dvsl" classname="org.apache.tools.dvsl.DVSLTask">

          <classpath>
             <path refid="classpath"/>
          </classpath>

      </taskdef>

      <dvsl
           basedir="${docs.src}"
           destdir="${docs.dest}/"
    	   toolboxfile="${basedir}/../xdocs/toolbox.props"
           extension=".html"
           style="${basedir}/../xdocs/site.dvsl"
           excludes="*menue.xml"
           includes="**/*.xml">
        <tool name="toolbox.string.LinkToPrinterFriendlyVersion" value="yes" />
        <tool name="toolbox.string.basedir" value="${basedir}" />
      </dvsl>

      <!-- create printer version of documentation -->
      <dvsl
           basedir="${docs.src}"
           destdir="${docs.dest}/"
    	   toolboxfile="${basedir}/../xdocs/toolbox.props"
           extension="-printer.html"
           style="${basedir}/../xdocs/site.dvsl"
           excludes="*menue.xml"
           includes="**/*.xml">
         <tool name="toolbox.string.PrinterFriendlyVersion" value="yes" />
         <tool name="toolbox.string.basedir" value="${basedir}" />
      </dvsl>

      <replace dir="${docs.dest}">
          <replacefilter token="@@@version@@@" value="${project.version}"/>
          <replacefilter token="@@@date@@@" value="${project.date}"/>
      </replace>

  </target>

</project>

