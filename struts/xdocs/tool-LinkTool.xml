<?xml version="1.0"?>

<document>

    <properties>
        <title>LinkTool</title>
        <author email="sidler@apache.org">Gabriel Sidler</author>
        <projectfile>xdocs/tools.xml</projectfile>
    </properties>

    <body>

    <section name="LinkTool Reference Documentation">

        <p>The LinkTool provides methods to work with URIs:</p>
        <ul>
            <li>translate logical names (Struts forwards, actions ) to URI references</li>
            <li>construct and encode query strings</li>
            <li>retrieve server, port and path info for the current request</li>
        </ul>

        <p>The LinkTool is somewhat special in that many of its methods return
        a new instance of LinkTool. This facilitates greatly the repeated use
        of the LinkTool in Velocity and leads to an elegant syntax.</p> 

        <p>I've been struggling a bit to find the right terminology for the things
        that this tool works with. Based on document 
        <a href="http://www.w3.org/Architecture/Terms">http://www.w3.org/Architecture/Terms</a>,
        I have used:</p>
        
        <dl>
            <dt>URI</dt>
            <dd>To refer to the full, absolute address of web resources, e.g. static documents
            or abstract resources like dynamically generated content. 
            Example: <code>http://myserver.org/myapp/templates/index.html</code></dd>

            <dt>URI Reference</dt>
            <dd>To refer to partial and relative URIs that reference a URI. Example: 
            <code>templates/index.html</code>. </dd>

            <dt>URL</dt>
            <dd>Not used here.</dd>

        </dl>
        
        
        
        <toolinfo version="@@@version@@@, @@@date@@@"
                  jar="velocity-tools-struts-@@@version@@@.jar"
                  clazz="org.apache.velocity.tools.struts.LinkTool"
                  name="$link"
                  authors="Gabriel Sidler, Nathan Bubna"
        />

        <methods/>

    </section>


    <section name="setURI()">
        <method name="setURI()">
    
            <abstract>
                Returns a copy of this LinkTool instance with the given URI reference.
            </abstract>
    
            <signature>
                LinkTool setURI(String uri)
            </signature>
            
            <parameters>
                <parameter name="uri">
                    URI reference to set. The URI reference can be absolute 
                    (<code>http://www.mydomain.com/myapp/templates/index.html</code>),
                    server-relative (<code>/myapp/templates/index.html</code>), 
                    relative (<code>templates/index.html</code>) 
                    and may contain query strings (<code>templates/index.html&#63;key1=value1&amp;key2=value2</code>).
                </parameter>
            </parameters>
    
            <returns>
                A new instance of <code>LinkTool</code>.  
            </returns>
    
            <description>
                <p>No conversions are applied to the given URI reference. This method will 
                overwrite any previously set URI reference but will copy query 
                data set with method <code>setQueryData()</code>.</p>
                
                <p>Note: It is Struts' recommended practice to link to
                actions or forwards, but not directly to templates as this
                bypassed the Struts controller. Consider using setAction() 
                or setForward() instead.</p>
             </description>
           
<sourcecode>## a relative reference
$link.setURI("index.html").addQueryData("key1","val 1")

## a server-relative reference
$link.setURI("/myapp/index.vm").addQueryData("key1","val 1")

## an absolute reference
$link.setURI("http://myserver.org/myapp/index.vm")
.addQueryData("key1", "val 1")

## a reference with a query string
$link.setURI("/myapp/index.vm?key0=val0")
.addQueryData("key1", "val 1")
</sourcecode>

<p>This produces:</p>

<sourcecode>index.vm/key1=val+1
    
/myapp/index.vm/key1=val+1

http://myserver.org/myapp/index.vm?key1=val+1

/myapp/index.vm?key0=val0&amp;key1=val+1</sourcecode>

        </method>
    </section>


    <section name="setAction()">
        <method name="setAction()">
    
            <abstract>
                Returns a copy of this LinkTool instance with the given action path
                converted into a server-relative URI reference.
            </abstract>
    
            <signature>
                LinkTool setAction(String action)
            </signature>
            
            <parameters>
                <parameter name="action">
                    An action path as defined in struts-config.xml, e.g. <code>/logon</code>.
                </parameter>
            </parameters>
    
            <returns>
                A new instance of <code>LinkTool</code>.  
            </returns>
    
            <description>
                <p>The action name is translated into a server-relative URI reference. The method does 
                not check if the specified action has been defined. It will overwrite any 
                previously set URI reference but will copy the query string.</p>
            </description>

<sourcecode>## a form tag
&lt;form name="form1" action="$link.setAction("demo")"&gt;</sourcecode>

<p>Produces something like:</p>

<sourcecode>&lt;form name="form1" action="/myapp/demo.do"&gt;</sourcecode>
    
        </method>
    </section>


    <section name="setForward()">
        <method name="setForward()">
    
            <abstract>
                Returns a copy of this LinkTool instance with the given global 
                forward name converted into a server-relative URI reference.
            </abstract>
    
            <signature>
                LinkTool setForward(String forward)
            </signature>
            
            <parameters>
                <parameter name="forward">
                    The name of a global forward as defined in struts-config.xml.
                </parameter>
            </parameters>
    
            <returns>
                A new instance of <code>LinkTool</code> or <code>null</code> if the 
                parameter does not map to a valid forward.
            </returns>
    
            <description>
                <p>The global forward name is translated into a server-relative 
                URI reference. This method will overwrite any previously set URI 
                reference but will copy the query string.</p>
            </description>

<sourcecode>## a forward
&lt;a href="$link.setForward("start").addQueryData("key1","val 1")"&gt;
My Link&lt;/a&gt;</sourcecode>

<p>Produces something like:</p>

<sourcecode>&lt;a href="/myapp/templates/index.vm?key=val+1"&gt;My Link&lt;/a&gt;</sourcecode>

    
        </method>
    </section>


    <section name="setAbsolute()">
        <method name="setAbsolute()">
    
            <abstract>
                Returns a copy of this LinkTool instance with the specified context-relative
                URI reference converted to a server-relative URI reference.
            </abstract>
    
            <signature>
                LinkTool setAbsolute(String uri)
            </signature>
            
            <parameters>
                <parameter name="uri">
                    A context-relative URI reference, i.e. a URI reference that is relative to the URI
                    used to address this web application.
                </parameter>
            </parameters>
    
            <returns>
                A new instance of <code>LinkTool</code>.  
            </returns>
    
            <description>
                <p>The specified context-relative URI reference is converted to a server-relative URI reference.
                This method will overwrite any previously set URI reference but will copy the query string.</p>
                
<sourcecode>## a context-relative hyperlink
&lt;a href="$link.setAbsolute("templates/index.vm")
.addQueryData("key1","val 1")"&gt;My Link&lt;/a&gt;</sourcecode>

<p>Produces something like:</p>

<sourcecode>&lt;a href="/myapp/templates/index.vm?key=val+1"&gt;My Link&lt;/a&gt;</sourcecode>
                
            </description>
    
        </method>
    </section>


    <section name="addQueryData()">
        <method name="addQueryData()">
    
            <abstract>
                Adds a key=value pair to the URI reference.
            </abstract>
    
            <signature>
                LinkTool addQueryData(String key, Object value)
            </signature>
            
            <parameters>
                <parameter name="key">
                    Key (name) of query parameter.
                </parameter>

                <parameter name="value">
                    Value of the query parameter. The string representation of this object is 
                    added to the query data.
                </parameter>
            </parameters>
    
            <returns>
                A new instance of <code>LinkTool</code>.  
            </returns>
    
            <description>
                <p>Adds a key=value pair to the query data. This returns a new LinkTool 
                containing both a copy of this LinkTool's query data and the new data.
                This makes repeated use in Velocity templates easy. Query data is
                URL-encoded before it is appended.</p>
                
                <p>See <a href="#setURI()">method setURI()</a> for examples.</p>
             </description>
    
        </method>
    </section>


    <section name="getURI()">
        <method name="getURI()">
    
            <abstract>
                Returns the current URI reference.
            </abstract>
    
            <signature>
                LinkTool getURI()
            </signature>
            
            <returns>
                Returns the current URI reference as set by one of the methods 
                setURI(), setAction(), setForward() or setAbsolute(). Any conversions 
                have been applied. The returned URI reference does not included query data that was
                added with method addQueryData().
            </returns>
    
            <see>
                Method <a href="#getQueryData()"><code>getQueryData()</code></a> to retrieve
                query data only. Method <a href="#toString()"><code>toString()</code></a> to 
                retrieve the URI reference including all query data.
            </see>
            
            <description>
<sourcecode>#set ($l = $link.setForward("start").addQueryData("key1","val 1"))
&lt;a href="$l.getURI()"&gt;My Link&lt;/a&gt;</sourcecode>

<p>Produces something like:</p>

<sourcecode>&lt;a href="/myapp/templates/index.vm"&gt;My Link&lt;/a&gt;</sourcecode>

            </description>
        </method>
    </section>


    <section name="getQueryData()">
        <method name="getQueryData()">
    
            <abstract>
                Returns this instance's query data.
            </abstract>
    
            <signature>
                String getQueryData()
            </signature>
                
            <returns>
                This instance's query data as set by the method 
                <a href="#setQueryData()"><code>setQueryData()</code></a>. The
                returned String is URL-encoded, e.g. "key=value&amp;foo=this+is+encoded".
            </returns>
            <description>
<sourcecode>#set ($l = $link.setForward("start").addQueryData("key1","val 1"))
$l.getQueryData()</sourcecode>

<p>Produces:</p>

<sourcecode>key1=val+1</sourcecode>

            </description>
                
        </method>
    </section>



    <section name="getContextURI()">
        <method name="getContextURI()">
    
            <abstract>
                Returns the URI that addresses this web application.
            </abstract>
    
            <signature>
                String getContextURI()
            </signature>
    
            <returns>
                Returns the URI reference that addresses this web application, e.g. 
                "http://myserver.net/myapp". This string does not end with a "/".
            </returns>
    
            <description>
                <p>Note! This will not represent the URI reference or 
                query data set for this LinkTool instance.</p>

<sourcecode>$link.getContextURI()</sourcecode>

<p>Produces something like:</p>

<sourcecode>http://myserver.net/myapp</sourcecode>

            </description>
    
        </method>
    </section>



    <section name="getContextPath()">
        <method name="getContextPath()">
    
            <abstract>
                Returns the context path that addresses this web application.
            </abstract>
    
            <signature>
                String getContextPath()
            </signature>
                
            <returns>
                The context path that addresses this web application, e.g. 
                <code>/myapp"</code>. This string starts with a "/" but does 
                not end with a "/".
            </returns>
    
            <description>
                <p> Note! This will not represent the URI reference or query 
                data set for this LinkTool instance.</p>

<sourcecode>$link.getContextPath()</sourcecode>

<p>Produces something like:</p>

<sourcecode>/myapp</sourcecode>

            </description>
    
        </method>
    </section>



    <section name="getBaseRef()">
        <method name="getBaseRef()">
    
            <abstract>
                Returns the full URI of this template.
            </abstract>
    
            <signature>
                String getBaseRef()
            </signature>
                
            <returns>
                The full URI of this template without any query data.
                e.g. <code>http://myserver.net/myapp/templates/View.vm</code>.
            </returns>
    
            <description>
                <p>Note! The returned String will not represent the URI reference or query 
                data set for this LinkTool instance. A typical application of this method 
                is with the HTML base tag.</p>

<sourcecode>## a base tag
&lt;base href="$link.getBaseRef()"&gt;</sourcecode>

<p>Produces something like:</p>

<sourcecode>&lt;base href="http://myserver.net/myapp/templates/index.vm"&gt;</sourcecode>

            </description>
    
        </method>
    </section>




    <section name="toString()">
        <method name="toString()">
    
            <abstract>
                Returns the full URI that has been constructed.
            </abstract>
    
            <signature>
                String toString()
            </signature>
            
            <returns>
                The full URI that has been built with this tool
                e.g. <code>/myapp/stuff/View.vm?id=42&amp;type=blue</code>.
            </returns>
    
            <description>
                <p>Typically it is not necessary to call this method explicitly.
                Velocity will call the toString() method automatically to 
                obtain a representable version of objects.</p>

<sourcecode>&lt;a href="$link.setAction("demo").addQueryString("key1", "val 1")"&gt;
My Link&lt;/a&gt;</sourcecode>

<p>Produces something like:</p>

<sourcecode>&lt;a href="/myapp/demo.do?key1=val+1"&gt;My Link&lt;/a&gt;</sourcecode>

            </description>
    
        </method>
    </section>

 </body>
</document>

