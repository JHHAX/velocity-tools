<project name="velocity-view" default="jar" basedir=".">

<!-- ========== Initialize Properties ===================================== -->

  <property file="build/build.properties"/>          <!-- Component local   -->
  <property file="../build.properties"/>             <!-- Commons local     -->
  <property file="${user.home}/.build.properties"/>  <!-- User local        -->

<!-- ========== External Dependencies ===================================== -->

 <!-- the local repository -->
 <property name="local.repository"            value="WEB-INF/lib" />
 <property name="project.repository"          value="WEB-INF/build-lib" />

<!-- ========== Component Declarations ==================================== -->


  <!-- The name of this component -->
  <property name="project.name"          value="VelStruts Example" />

  <!-- The title of this component -->
  <property name="project.title"         value="VelStruts Example"/>

  <!-- The base directory for compilation targets -->
  <property name="build.home"            value="WEB-INF"/>

  <!-- The base directory for distribution targets -->
  <property name="dist.home"             value="dist"/>

  <!-- The base directory for component sources -->
  <property name="source.home"           value="WEB-INF/src"/>

  <!-- The base directory for component sources -->
  <property name="conf.home"             value="src/conf"/>

  <!-- The docs source directory -->
  <property name="docs.src"              value="xdocs"/>

  <!-- The docs destination directory  -->
  <property name="docs.dest"             value="doc"/>


<!-- ========== Compiler Defaults ========================================= -->


  <!-- Should Java compilations set the 'debug' compiler option? -->
  <property name="compile.debug"           value="true"/>

  <!-- Should Java compilations set the 'deprecation' compiler option? -->
  <property name="compile.deprecation"     value="true"/>

  <!-- Should Java compilations set the 'optimize' compiler option? -->
  <property name="compile.optimize"        value="true"/>

  <!-- Construct compile classpath -->
  <path id="classpath">
    <fileset dir="${local.repository}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${project.repository}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

<!-- ========== Executable Targets ======================================== -->


  <!-- ================================================================== -->
  <!-- I N I T                                                            -->
  <!-- ================================================================== -->
  <target name="init"
   description="Initialize and evaluate conditionals">
    <echo message="-------- ${project.name} --------"/>
    <tstamp/>
  </target>


  <!-- ================================================================== -->
  <!-- C O M P I L E                                                      -->
  <!-- ================================================================== -->
  <target name="compile" depends="init" description="Compile">

    <javac  srcdir="${source.home}/"
            destdir="${build.home}/classes"
            debug="${compile.debug}"
            deprecation="${compile.deprecation}"
            optimize="${compile.optimize}">
        <classpath refid="classpath"/>
    </javac>

    <copy    todir="${build.home}/classes">
      <fileset dir="${source.home}" excludes="**/*.java"/>
    </copy>

  </target>


  <!-- ================================================================== -->
  <!-- C L E A N                                                          -->
  <!-- ================================================================== -->
  <target name="clean" depends="init" 
   description="Clean build and distribution directories">

    <!-- remove old class files -->
    <delete>
      <fileset dir="${build.home}/classes" includes="**/*.class"/>
    </delete>

    <!-- remove jsp temporary cache -->
    <delete    dir="${build.home}/work"/>

    <!-- remove *.bak backups -->
    <delete>
      <fileset dir="${basedir}" includes="**/*.bak"/>
    </delete>

  </target>


  <!-- ================================================================== -->
  <!-- W A R                                                              -->
  <!-- ================================================================== -->
  <target name="war" depends="clean, compile"
    description="Generate a *.war file of the example application">
    <!-- Generate .war file, name it velstruts.war -->
    <jar jarfile="${basedir}/../velstruts.war" basedir="${basedir}"/>
  </target>



</project>

