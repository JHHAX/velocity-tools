<project name="velocity-tools-view" default="jar" basedir=".">

<!-- ========== Initialize Properties ===================================== -->

  <property file="build/build.properties"/>          <!-- Component local   -->
  <property file="../build.properties"/>             <!-- Commons local     -->
  <property file="${user.home}/.build.properties"/>  <!-- User local        -->

<!-- ========== External Dependencies ===================================== -->

 <!-- the local repository -->
 <property name="local.repository"            value="./lib" />
 <property name="project.repository"          value="../lib" />

<!-- ========== Component Declarations ==================================== -->


  <!-- The name of this component -->
  <property name="project.name"          value="velocity-tools-view" />

  <!-- The title of this component -->
  <property name="project.title"         value=""/>

  <!-- The current version number of this component -->
  <property name="project.version"       value="0.5"/>

  <!-- The base directory for compilation targets -->
  <property name="build.home"              value="target"/>

  <!-- The base directory for distribution targets -->
  <property name="dist.home"               value="dist"/>

  <!-- The base directory for component sources -->
  <property name="source.home"             value="src"/>

  <!-- The base directory for component sources -->
  <property name="conf.home"             value="src/conf"/>

  <!-- The docs source directory -->
  <property name="docs.src"             value="xdocs"/>

  <!-- The docs destination directory  -->
  <property name="docs.dest"             value="docs"/>

<!-- ========== Compiler Defaults ========================================= -->


  <!-- Should Java compilations set the 'debug' compiler option? -->
  <property name="compile.debug"           value="true"/>

  <!-- Should Java compilations set the 'deprecation' compiler option? -->
  <property name="compile.deprecation"     value="true"/>

  <!-- Should Java compilations set the 'optimize' compiler option? -->
  <property name="compile.optimize"        value="true"/>

  <!-- Construct compile classpath -->
  <path id="classpath">
    <fileset dir="${local.repository}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${project.repository}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

<!-- ========== Executable Targets ======================================== -->


  <!-- ================================================================== -->
  <!-- I N I T                                                            -->
  <!-- ================================================================== -->
  <target name="init">
    <echo message="-------- ${project.name} ${project.version} --------"/>
    <filter  token="name"                  value="${project.name}"/>
    <filter  token="version"               value="${project.version}"/>
  </target>


  <!-- ================================================================== -->
  <!-- P R E P A R E                                                      -->
  <!-- ================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/classes"/>
    <mkdir dir="${build.home}/conf"/>
    <mkdir dir="${build.home}/javadoc"/>
    <mkdir dir="${docs.dest}/javadoc-velservlet"/>
  </target>


  <!-- ================================================================== -->
  <!-- S T A T I C                                                        -->
  <!-- ================================================================== -->
  <target name="static" depends="prepare">
    <tstamp/>
    <copy  todir="${build.home}/conf" filtering="on">
      <fileset dir="${conf.home}" includes="*.MF"/>
    </copy>
  </target>


  <!-- ================================================================== -->
  <!-- C O M P I L E                                                      -->
  <!-- ================================================================== -->
  <target name="compile" depends="static" 
    description="Compile all classes into ${build.home}/classes">

    <javac  srcdir="${source.home}/java"
            destdir="${build.home}/classes"
            debug="${compile.debug}"
            deprecation="${compile.deprecation}"
            optimize="${compile.optimize}">
        <classpath refid="classpath"/>
    </javac>

    <copy    todir="${build.home}/classes" filtering="on">
      <fileset dir="${source.home}/java" excludes="**/*.java"/>
    </copy>

  </target>


  <!-- ================================================================== -->
  <!-- C L E A N                                                          -->
  <!-- ================================================================== -->
  <target name="clean"
   description="Clean build and distribution directories">
    <delete    dir="${build.home}"/>
    <delete    dir="${dist.home}"/>
    <delete>
      <fileset dir="${docs.dest}" includes="**/*"/>
    </delete>
    <delete    dir="${docs.dest}/javadoc-velservlet"/>
    <delete>
      <fileset dir="${basedir}" includes="**/*.bak"/>
    </delete>

  </target>


  <!-- ================================================================== -->
  <!-- A L L                                                              -->
  <!-- ================================================================== -->
  <target name="all" depends="clean,jar, docs, javadocs"
   description="Clean and compile all components"/>


  <!-- ================================================================== -->
  <!-- J A V A D O C S                                                    -->
  <!-- ================================================================== -->
  <target name="javadocs" depends="compile"
    description="Create Javadoc documentation into ${build.home}/javadoc">
    <javadoc sourcepath="${source.home}/java"
                destdir="${build.home}/javadoc"
           packagenames="org.apache.velocity.tools.view.*"
                 author="true"
                private="true"
                version="true"
               doctitle="&lt;h1&gt;${project.title}&lt;/h1&gt;"
            windowtitle="${project.title} (Version ${project.version})"
                 bottom="Copyright (c) 2002 Apache Software Foundation" >

      <classpath refid="classpath"/>

     </javadoc>
  </target>


  <!-- ================================================================== -->
  <!-- J A V A D O C S   V E L S E R V L E T                              -->
  <!-- ================================================================== -->
  <target name="javadocs-velservlet" depends="static"
    description="Create Javadoc documentation specific to VelServlet, only public members">

    <!-- Construct compile classpath -->
    <path id="sourcepath">
      <pathelement path="src/java/"/>
    </path>

    <javadoc sourcepathref="sourcepath"
                   destdir="${docs.dest}/javadoc-velservlet"
                    author="true"
                    public="true"
                   version="true"
                  doctitle="&lt;h1&gt;${project.title}&lt;/h1&gt;"
               windowtitle="${project.title} (Version ${project.version})"
                    bottom="Copyright (c) 2002 Apache Software Foundation" >
      <package name="org.apache.velocity.tools.view.context"/>
      <package name="org.apache.velocity.tools.view.servlet"/>
      <package name="org.apache.velocity.tools.view.tools"/>
      <classpath refid="classpath"/>
    </javadoc>

  </target>


  <!-- ================================================================== -->
  <!--  J A R                                                             -->
  <!-- ================================================================== -->
  <target name="jar" depends="compile"
    description="Package classes as jar into ${builddir}">
    <jar    jarfile="${project.name}-${project.version}.jar"
            basedir="${build.home}/classes"
            manifest="${conf.home}/MANIFEST.MF"/>
  </target>


  <!-- ================================================================== -->
  <!-- D O C S                                                            -->
  <!-- ================================================================== -->
  <target name="docs"
    description="Generate documentation into ${docs.dest}">

      <taskdef name="dvsl" classname="org.apache.tools.dvsl.DVSLTask">

          <classpath>
             <path refid="classpath"/>
          </classpath>

      </taskdef>

      <dvsl
           basedir="${docs.src}"
           destdir="${docs.dest}/"
    	   toolboxfile="../xdocs/toolbox.props"
           extension=".html"
           style="../xdocs/site.dvsl"
           excludes="**/*menue.xml"
           includes="**/*.xml"
      />
  </target>


  <!-- ================================================================== -->
  <!-- I N S T A L L  J A R                                               -->
  <!-- ================================================================== -->
  <target name="install-jar" depends="jar"
          description="Installs .jar file in ${lib.repo}">
    <copy todir="${lib.repo}" filtering="no">
      <fileset dir="${basedir}">
        <include name="${project.name}-${project.version}.jar"/>
      </fileset>
    </copy>
  </target>

</project>

